name: Release Workflow

on:
    push:
        branches: [ "master", "dev" ]


jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore VeeamHealthCheck.csproj
      working-directory: vHC/HC_Reporting

    - name: Build
      run: dotnet build VeeamHealthCheck.csproj --configuration Release --no-restore
      working-directory: vHC/HC_Reporting

    - name: Run tests
      run: dotnet test VeeamHealthCheck.csproj --no-restore --verbosity normal
      working-directory: vHC/HC_Reporting



  release:
    needs: build
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2



    - name: Publish project
      run: dotnet publish VeeamHealthCheck.csproj -c Release -o ./publish --runtime "win-x64" --self-contained -p:PublishSingleFile=true -p:UseAppHost=true -f "net8.0-windows7.0"
      working-directory: vHC/HC_Reporting

    - name: Zip published files
      id: zip_files
      run: |
        $version = (Get-Command D:\a\veeam-healthcheck\veeam-healthcheck\vHC\HC_Reporting\publish\VeeamHealthCheck.exe).FileVersionInfo.FileVersion
        Write-Host("Version: $version")
        gci D:\a\veeam-healthcheck\veeam-healthcheck\vHC\HC_Reporting\publish\
        mkdir D:\a\publish
        gci D:\a\
        Compress-Archive -Path D:\a\veeam-healthcheck\veeam-healthcheck\vHC\HC_Reporting\publish\* -DestinationPath D:\a\publish\VeeamHealthCheck-$version.zip
        gci D:\a\publish
        echo "::set-output name=version::$version"
        $hash = Get-FileHash -Path D:\a\publish\VeeamHealthCheck-$version.zip -Algorithm SHA256
        $hash | Out-File -FilePath "D:\a\publish\VeeamHealthCheck-$version.zip.sha256"
        $hash

      shell: pwsh

    - name: Upload to VirusTotal
      id: virustotal_scan
      run: |
        $file = "D:\a\publish\VeeamHealthCheck-${{ steps.zip_files.outputs.version }}.zip"
        $apiKey = "${{ secrets.VIRUSTOTAL_API_KEY }}"
        
        # Get the upload URL
        $uploadUrlResponse = Invoke-RestMethod -Uri "https://www.virustotal.com/api/v3/files/upload_url" -Method Get -Headers @{ "x-apikey" = $apiKey }
        Write-Host "Upload URL Response: $uploadUrlResponse"
        if ($uploadUrlResponse -eq $null) {
          Write-Host "Failed to get upload URL from VirusTotal."
          exit 1
        }
        $uploadUrl = $uploadUrlResponse.data
        Write-Host "Upload URL: $uploadUrl"
        if ([string]::IsNullOrEmpty($uploadUrl)) {
          Write-Host "Upload URL is null or empty."
          exit 1
        }
        
        # Upload the file using the obtained URL
        $form = @{
          file = Get-Item $file
        }
        $response = Invoke-RestMethod -Uri $uploadUrl -Method Post -Headers @{ "x-apikey" = $apiKey } -Form $form
        
        echo "::set-output name=scan_id::$(echo $response.data.id)"
      shell: pwsh

    - name: Check VirusTotal Scan Results
      run: |
        $scanId = "${{ steps.virustotal_scan.outputs.scan_id }}"
        $apiKey = "${{ secrets.VIRUSTOTAL_API_KEY }}"
        $response = Invoke-RestMethod -Uri "https://www.virustotal.com/api/v3/analyses/$scanId" -Method Get -Headers @{ "x-apikey" = $apiKey }
        Write-Host "Scan Results: $($response.data.attributes.stats)"
      shell: pwsh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: D:\a\publish\VeeamHealthCheck-${{ steps.zip_files.outputs.version }}.zip
        asset_name: VeeamHealthCheck-${{ steps.zip_files.outputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Upload Release Asset (SHA256)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: D:\a\publish\VeeamHealthCheck-${{ steps.zip_files.outputs.version }}.zip.sha256
        asset_name: VeeamHealthCheck-${{ steps.zip_files.outputs.version }}.zip.sha256
        asset_content_type: text/plain